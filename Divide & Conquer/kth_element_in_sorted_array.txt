Given two sorted arrays arr1 and arr2 of size M and N respectively and an element K. The task is to find the element that would be at the kâ€™th position of the final sorted array.

int kthElement(int nums1[], int nums2[], int n, int m, int k)
    {
        int n1 = n;
        int n2 = m;
        // make sure first array is of smaller length i.e n1 < n2
        if(n1 > n2) return kthElement(nums2, nums1 ,m, n,k);
        int low = max(0,k-n2);
        int high = min(k,n1);
        while(low <= high)
        {
            int mid1 = (low + high) / 2;
            
            int mid2 = k - mid1;
            
            int l1 = (mid1 - 1 < 0) ? INT_MIN : nums1[mid1 - 1];
            int l2 = (mid2 - 1 < 0) ? INT_MIN : nums2[mid2 - 1];
            int r1 = (mid1 == n1) ? INT_MAX : nums1[mid1];
            int r2 = (mid2 == n2) ? INT_MAX : nums2[mid2];
            
            
            if(l1 <= r2 && l2 <= r1)
            {
                 return max(l1, l2);  
            }
            if(l1 > r2)
            {
                high = mid1 - 1;
            }
            if(l2 > r1)
            {
                low = mid1 + 1;
            }
        }
    
    }
};