Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

class Solution {
public:
    bool check(TreeNode *p,TreeNode *q){
        if( (!p && !q) )
                return true;
        else if((p && !q) || (!p && q) )
                return false;
        else     
            return p->val==q->val && check(p->left,q->right) && check(p->right,q->left);
    }
    bool isSymmetric(TreeNode* root) {
        if(!root->left && !root->right)
            return true;
        else if(!root->left && root->right || root->left && !root->right)
            return false;
        else
            return check(root->left,root->right);
    }
};