Given a non-negative number N and two values L and R. 
The problem is to toggle the bits in the range L to R in the binary representation of N, i.e, to toggle bits from the rightmost Lth bit to the rightmost Rth bit. 
A toggle operation flips a bit 0 to 1 and a bit 1 to 0. Print N after the bits are toggled.

int setbits(int L,int R){
        int sum=0;
        for(int i=L;i<=R;i++){
            sum+=pow(2,i-1);
        }
        return sum;
    }
    
    int toggleBits(int N , int L , int R) {
        int M=setbits(L,R);
        N^=M;
        return N;
    }
	______________________________________________
	int setbits(int l,int r){
        return (1<<r)-1 ^ (1<<(l-1))-1;
    }
    
    int toggleBits(int N , int L , int R) {
        //int M=setbits(L,R);
        N^=setbits(L,R);
        return N;
    }
	______________________________________________