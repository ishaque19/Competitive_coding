Given a singly linked list of size N. The task is to swap elements in the linked list pairwise.
For example, if the input list is 1 2 3 4, the resulting list after swaps will be 2 1 4 3.
Note: You need to swap the nodes, not only the data. If only data is swapped then driver will print -1.

struct Node *swap(struct Node *p,struct Node *q){
        if(q->next && q->next->next){
            p->next=swap(q->next,q->next->next);
            q->next=p;
            return q;
        }
        else if(q->next){
            p->next=q->next;
            q->next=p;
            return q;
            
        }
        else{
            q->next=p;
            p->next=NULL;
            return q;
        }
        
    }
    Node* pairWiseSwap(struct Node* head) 
    {
        // The task is to complete this method
        if(!head)
            return  head;
		else if(head && !head->next)
            return  head;
        else if(head && head->next && !head->next->next){
            struct Node *q=head->next;
            q->next=head;
            head->next=NULL;
            return q;
        }
        else
            return swap(head,head->next);
    }