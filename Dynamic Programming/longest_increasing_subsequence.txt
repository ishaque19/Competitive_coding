Given an integer array nums, return the length of the longest strictly increasing subsequence.

A subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. 
For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].

class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int max=1;
        if(nums.size()==1)
            return max;
        vector<int> lis(nums.size(),1);
        for(int i=1;i<lis.size();i++){
            for(int j=0;j<i;j++){
                if(nums[i]>nums[j] && lis[i]<=lis[j]){
                    lis[i]=1+lis[j];
                    if(lis[i]>max)
                        max=lis[i];
                }
            }
        }
        
        return max;
    }
};