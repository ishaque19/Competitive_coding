Given an array A[ ] of positive integers of size N, where each value represents the number of chocolates in a packet. 
Each packet can have a variable number of chocolates.
There are M students, the task is to distribute chocolate packets among M students such that :
1. Each student gets exactly one packet.
2. The difference between maximum number of chocolates given to a student and minimum number of chocolates given to a student is minimum.

Your Task:
You don't need to take any input or print anything. Your task is to complete the function findMinDiff() which takes array A[ ],
 N and M as input parameters and returns the minimum possible difference between maximum number of chocolates given to a student and minimum number of chocolates given to a student.

Expected Time Complexity: O(N*Log(N))
Expected Auxiliary Space: O(1)



long long findMinDiff(vector<long long> a, long long n, long long m){
    sort(a.begin(),a.end());
    long long min=INT_MAX;
    for(long long i=0,j=m-1;j<n;i++,j++){
        if(a[j]-a[i]<min)
            min=a[j]-a[i];
    }
    
    return min;
    
}

